plugins {
	id 'java'
    id 'maven-publish'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.springframework.cloud.contract' version '4.3.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.algaworks.algashop'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {mavenCentral()
    mavenLocal()
}

publishing{
    publications{
        maven(MavenPublication){
            artifact bootJar
            artifact verifierStubsJar
        }
    }
}

ext {
	set('springCloudVersion', "2025.0.0")
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

contracts {
    packageWithBaseClasses = "com.algaworks.algashop.product.catalog.contract.base"
}

tasks.named('contractTest') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}

asciidoctor {
    dependsOn contractTest
    inputs.dir snippetsDir
    attributes 'snippets': snippetsDir
    sources {
        include 'index.adoc'
    }
    baseDirFollowsSourceFile()
    outputDir = file("build/docs/asciidoc")
}
